
-------------------------------------------------
runner_server:
-------------------------------------------------

o) client tests: would be nice to set runner_server's Logger
    to NullLogger, or to quieter logger, eg one that does not log success
    Getting lots of stdout loggin from the runner-server when the
    runner-client calls into it.

o) client runner_test.rb E6F reveals a problem on the runner_server
    # Here's the log (after the test has finished)
    #
    # runner_server | 12:59:13 web.1 | "COMMAND:docker volume rm cyber_dojo_201BCE6F_salmon"
    # runner_server | 12:59:13 web.1 | Error response from daemon: Unable to remove volume,
    #    volume still in use: remove cyber_dojo_201BCE6F_salmon: volume is in use -
    #    [b66474ead6b0720c71a120cde915b20d88c9560a158e4b4f8302fd0d9baf382b]
    #
    # doing [docker ps -a] shows that b6647... is *not* there
    # but of course at the time it was.
    # doing [docker volume ls] shows [local cyber_dojo_201BCE6F_salmon] is there.
    # This relates to the child-process [docker rm]...
    # Note runner_server's microservice's goodbye() does *not* have the
    # synchronization that docker_helpers_test.rb has.
    #
    # Should a run() somehow record the cid inside the volume
    # so goodbye() can get its cid and do the same synchronization?
    # It seems logical that goodbye on the runner-server should
    # be self-contained.

o) massage micro_service returned strings.
   - clean them
   - truncate them

o) write the hello()-datetime to a known file inside the volume.
   write the run()-datetime to a known file inside the volume.
   Separate reaper/pruner service can delete old volumes.

o) runner_server micro-service needs to check each shell call and return
   { status:error, output:msg }
   if somthing goes wrong.

o) add cpu/memory/swap limits
   See comments at https://github.com/cyber-dojo/commander/blob/master/docker-compose.yml
   See https://github.com/docker/docker/pull/9437
   for suggestion that limits might be uid/gid based.
   Should I use cyber-dojo user and not nobody:nogroup ?
   What if the image does not have cyber-dojo user?
   I guess I can just use its integer id, 19661

   From [docker run --help]
   --blkio-weight value          Block IO (relative weight), between 10 and 1000
   --blkio-weight-device value   Block IO weight (relative device weight) (default []
   --cpu-period int              Limit CPU CFS (Completely Fair Scheduler) period
   --cpu-quota int               Limit CPU CFS (Completely Fair Scheduler) quota
   -c, --cpu-shares int
   --device-read-bps value       Limit read rate (bytes per second) from a device (default [])
   --device-read-iops value      Limit read rate (IO per second) from a device (default [])
   --device-write-bps value      Limit write rate (bytes per second) to a device (default [])
   --device-write-iops value     Limit write rate (IO per second) to a device (default [])
   --isolation string            Container isolation technology
   --kernel-memory string        Kernel memory limit
   -m, --memory string               Memory limit
   --memory-reservation string   Memory soft limit
   --memory-swap string          Swap limit equal to memory plus swap: '-1' to enable unlimited swap
   --memory-swappiness int       Tune container memory swappiness (0 to 100) (default -1)
   --pids-limit int              Tune container pids limit (set -1 for unlimited)
   --ulimit value                Ulimit options (default [])

o) what if filename has a quote in it?

o) log assert_exec() fail in docker_runner.rb

-------------------------------------------------

o) [./cyber-dojo update]
   does not update the language images. Should it?